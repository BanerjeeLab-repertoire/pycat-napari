[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "PyCAT"
version = "1.0.0"
dependencies = [
    "aicsimageio",
    "aicspylibczi>=3.0.5",
    "cellpose",
    "matplotlib",
    "napari",
    "numpy",
    "opencv-python-headless",
    "pandas",
    "pydantic",
    "pyqt5",
    "torch",
    "pywavelets",
    "scikit-image",
    "scikit-learn",
    "scipy",
    "seaborn",
    "simpleitk"
]

requires-python = ">=3.9"

authors = [
    { name = "Christian Neureuter", email = "christian.neureuter@icloud.com" }
]

description = "Python Condensate Analysis Toolbox"
readme = "README.md"
license = {file = "LICENSE"}
keywords = ["condensate", "image analysis", "fluorescence image analysis", "napari", "PyCAT"]

classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent"
]

[project.optional-dependencies]
devbio = [
    "napari-plugin-engine>=0.1.4",
    "npe2<0.7.0",
    "aicsimageio",
    "aicspylibczi>=3.0.5",
    "numpy>=1.21.4",
    "napari-pyclesperanto-assistant",
    "napari-skimage-regionprops",
    "napari-animation",
    "PlatyMatch",
    "napari-plot-profile",
    "napari-accelerated-pixel-and-object-classification",
    "napari-brightness-contrast",
    "napari-plugin-search",
    "napari-segment-blobs-and-things-with-membranes",
    "napari-simpleitk-image-processing",
    "napari-folder-browser",
    "napari-crop",
    "napari-clusters-plotter>=0.7.1",
    "napari-stl-exporter",
    "napari-tabu",
    "napari-workflow-optimizer",
    "napari-workflow-inspector",
    "napari-curtain",
    "napari-layer-details-display",
    "napari",
    "vispy",
    "napari-mouse-controls",
    "the-segmentation-game",
    "napari-process-points-and-surfaces",
    "napari-blob-detection",
    "jupyterlab",
    "napari-czifile2",
    "napari-roi",
    "pydantic!=1.10.0",
    "napari-pystackreg",
    "imageio!=2.22.1",
    "redlionfish",
    "jupyter_server<2.0.0",
    "seaborn"
]

arm-mac = ["torchvision; platform_system=='Darwin' and platform_machine=='arm64'", "torch==2.1.2; platform_system=='Darwin' and platform_machine=='arm64'"]

[tool.setuptools.packages.find]
where = ["."]
exclude = ["build", "dist", "*.egg-info", "tests"]

[tool.setuptools.package-data]
pycat = ["docs/logos/*.png"]

[project.scripts]
run-pycat = "pycat.run_pycat:main"